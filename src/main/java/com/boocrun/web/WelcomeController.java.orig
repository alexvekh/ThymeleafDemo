package com.boocrun.web;

import java.util.ArrayList;
import java.util.Date;
import java.util.List;
import java.util.Optional;
import java.util.stream.Collectors;

import org.springframework.stereotype.Controller;
import org.springframework.ui.ModelMap;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;

import com.boocrun.domain.Car;
import com.boocrun.domain.Model;

@Controller
public class WelcomeController 
{	
<<<<<<< HEAD
	List<String> carBrands = new ArrayList<>();
	List<Car> cars = new ArrayList<>();
	
	public WelcomeController () {
		carBrands.add("Toyota");
		carBrands.add("Honda");
		carBrands.add("Tesla");
		carBrands.add("Ford");
		carBrands.add("GM");
		carBrands.add("BMW");
		carBrands.add("Mazda");
		carBrands.add("Chevrolet");
=======
	List<String> cars = new ArrayList<>();
	
	public WelcomeController () {
		cars.add("Toyota");
		cars.add("Honda");
		cars.add("Tesla");
		cars.add("Ford");
		cars.add("GM");
		cars.add("BMW");
		cars.add("Mazda");
		cars.add("Chevrolet");
>>>>>>> origin/main
		
	}
	
	@RequestMapping(value="/", method=RequestMethod.GET)		
	public String welcome (ModelMap model, @RequestParam(required=false) String carBrand) 
	{
<<<<<<< HEAD
		Optional<Car> carOpt = cars.stream().filter(car -> car.getBrand().equals(carBrand)).findFirst();
		if (carOpt.isPresent())
		{
			Car car = carOpt.get();
			populateModel(model, car);
		}
		else
		{
			populateModel(model, null);
		}
=======
		
		populateModel(model);
>>>>>>> origin/main
		
		return "welcome";
		
	}

	private void populateModel(ModelMap model, Car car) {
		model.put("message", "This message comes to yu from our Welcome Controller");
<<<<<<< HEAD
		model.put("carBrands", carBrands);
		model.put("today", new Date());
		model.put("money", 1654512.53);
=======
		model.put("cars", cars);
		model.put("today", new Date());
		model.put("money", 12.53);
>>>>>>> origin/main
		
		
		if (car == null)
			car = new Car();
		
		if (car.getModels().isEmpty())
		{
			Model carModel = new Model();
			List<Model> carModels = new ArrayList<>();
			carModels.add(carModel);
			car.setModels(carModels);
		}
		model.put("car", car);
		model.put("cars", cars);
	}
	
	@RequestMapping(value="/", method=RequestMethod.POST)
	public String welcomPast (@ModelAttribute Car car, ModelMap model) {
		if (cars.contains(car))
		{
			cars.get(cars.indexOf(car)).getModels().add(car.getModels().get(0));
		}
		else {
			cars.add(car);
		}
		
		populateModel(model, null);
		return "welcome";
	}
	
	@RequestMapping(value="/del/{carBrand}", method=RequestMethod.GET)
	public String deleteCarBrend (@PathVariable String carBrand, ModelMap model) {
<<<<<<< HEAD
		List<Car> carBrands = cars.stream().filter(car -> car.getBrand().equals(carBrand)).collect(Collectors.toList());
		cars.removeAll(carBrands);
		return "redirect:/";
	}
}
=======
		cars.remove(carBrand);
		populateModel(model);
		return "welcome";
	}
}
>>>>>>> origin/main
